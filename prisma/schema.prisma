generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String    @unique
  posts    Post[]
  likes    Like[]
  comments Comment[]
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  type      String
  media     Media[]
  likes     Like[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
}

model Media {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  description String?
  url         String?
  type        String
  postId      String? @db.ObjectId
  post        Post?   @relation(fields: [postId], references: [id])
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    String   @map("post_id") @db.ObjectId
  userId    String?  @map("user_id") @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  user      User?    @relation(fields: [userId], references: [id])
}

model Comment {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  content       String
  website       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  postId        String    @map("post_id") @db.ObjectId
  userId        String?   @map("user_id") @db.ObjectId
  post          Post      @relation(fields: [postId], references: [id])
  user          User?     @relation(fields: [userId], references: [id])
  parentId      String?   @map("parent_id") @db.ObjectId
  parent        Comment?  @relation("ChildComments", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  childComments Comment[] @relation("ChildComments")
}
